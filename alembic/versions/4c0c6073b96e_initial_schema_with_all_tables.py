"""initial_schema_with_all_tables

Revision ID: 4c0c6073b96e
Revises: 
Create Date: 2025-10-13 12:35:39.283245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4c0c6073b96e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diff_journal_entries',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False, comment='Task that triggered update'),
    sa.Column('domain_id', sa.String(length=64), nullable=False, comment='Domain namespace for isolation'),
    sa.Column('bullet_id', sa.String(length=36), nullable=False, comment='Affected bullet ID'),
    sa.Column('operation', sa.Enum('ADD_NEW', 'INCREMENT_HELPFUL', 'INCREMENT_HARMFUL', 'MERGE_DUPLICATES', 'QUARANTINE', name='mergeoperation'), nullable=False, comment='Type of change'),
    sa.Column('before_hash', sa.String(length=64), nullable=True, comment='SHA-256 hash before update'),
    sa.Column('after_hash', sa.String(length=64), nullable=True, comment='SHA-256 hash after update'),
    sa.Column('before_state', sa.JSON(), nullable=True, comment='Dict - bullet state before'),
    sa.Column('after_state', sa.JSON(), nullable=True, comment='Dict - bullet state after'),
    sa.Column('similarity_score', sa.JSON(), nullable=True, comment='Float - cosine similarity for duplicate detection'),
    sa.Column('metadata', sa.JSON(), nullable=True, comment='Dict - additional metadata (merged_ids, etc.)'),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('stage', sa.String(length=32), nullable=True, comment='Shadow/Staging/Prod at time of change'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_diff_journal_entries'))
    )
    op.create_index(op.f('ix_diff_journal_entries_bullet_id'), 'diff_journal_entries', ['bullet_id'], unique=False)
    op.create_index(op.f('ix_diff_journal_entries_domain_id'), 'diff_journal_entries', ['domain_id'], unique=False)
    op.create_index(op.f('ix_diff_journal_entries_operation'), 'diff_journal_entries', ['operation'], unique=False)
    op.create_index(op.f('ix_diff_journal_entries_stage'), 'diff_journal_entries', ['stage'], unique=False)
    op.create_index(op.f('ix_diff_journal_entries_task_id'), 'diff_journal_entries', ['task_id'], unique=False)
    op.create_index(op.f('ix_diff_journal_entries_timestamp'), 'diff_journal_entries', ['timestamp'], unique=False)
    op.create_table('playbook_bullets',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('domain_id', sa.String(length=64), nullable=False, comment='Multi-tenant namespace (CHK077-CHK078, pattern ^[a-z0-9-]+$)'),
    sa.Column('content', sa.Text(), nullable=False, comment='Strategy text (never rewritten)'),
    sa.Column('section', sa.String(length=32), nullable=False, comment='Helpful/Harmful/Neutral classification'),
    sa.Column('helpful_count', sa.Integer(), nullable=False, comment='Success signal count'),
    sa.Column('harmful_count', sa.Integer(), nullable=False, comment='Failure signal count'),
    sa.Column('tags', sa.JSON(), nullable=False, comment='List[str] - domain/category tags'),
    sa.Column('embedding', sa.JSON(), nullable=False, comment='List[float] - 384-dim vector'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=False),
    sa.Column('stage', sa.Enum('SHADOW', 'STAGING', 'PROD', 'QUARANTINED', name='playbookstage'), nullable=False, comment='Shadow/Staging/Prod/Quarantined'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_playbook_bullets'))
    )
    op.create_index('idx_domain_section', 'playbook_bullets', ['domain_id', 'section'], unique=False)
    op.create_index('idx_domain_stage', 'playbook_bullets', ['domain_id', 'stage'], unique=False)
    op.create_index(op.f('ix_playbook_bullets_domain_id'), 'playbook_bullets', ['domain_id'], unique=False)
    op.create_index(op.f('ix_playbook_bullets_section'), 'playbook_bullets', ['section'], unique=False)
    op.create_index(op.f('ix_playbook_bullets_stage'), 'playbook_bullets', ['stage'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('domain_id', sa.String(length=64), nullable=False, comment='Multi-tenant namespace (CHK077-CHK078)'),
    sa.Column('prompt', sa.Text(), nullable=False, comment='Task description or question'),
    sa.Column('domain', sa.String(length=64), nullable=False, comment='Task category'),
    sa.Column('ground_truth', sa.Text(), nullable=True, comment='Known correct answer (optional)'),
    sa.Column('metadata_json', sa.JSON(), nullable=True, comment='Additional task context'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks'))
    )
    op.create_index(op.f('ix_tasks_domain'), 'tasks', ['domain'], unique=False)
    op.create_index(op.f('ix_tasks_domain_id'), 'tasks', ['domain_id'], unique=False)
    op.create_table('reflections',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('analysis_summary', sa.Text(), nullable=False, comment='High-level outcome summary'),
    sa.Column('confidence_score', sa.Float(), nullable=False, comment='Overall reflection quality (0.0-1.0)'),
    sa.Column('requires_human_review', sa.JSON(), nullable=False, comment='bool - high impact but low confidence'),
    sa.Column('feedback_types_used', sa.JSON(), nullable=False, comment='List[str] - feedback signals analyzed'),
    sa.Column('referenced_steps', sa.JSON(), nullable=False, comment='List[int] - reasoning trace indices analyzed'),
    sa.Column('contradicts_existing', sa.JSON(), nullable=False, comment='List[str] - conflicting bullet IDs'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_reflections_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reflections'))
    )
    op.create_index(op.f('ix_reflections_task_id'), 'reflections', ['task_id'], unique=False)
    op.create_table('task_outputs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('reasoning_trace', sa.JSON(), nullable=False, comment='List[str] - step-by-step reasoning process'),
    sa.Column('answer', sa.Text(), nullable=False, comment='Final answer from Generator'),
    sa.Column('confidence', sa.Float(), nullable=False, comment='Generator confidence (0.0-1.0)'),
    sa.Column('bullets_referenced', sa.JSON(), nullable=False, comment='List[str] - playbook bullet IDs consulted'),
    sa.Column('latency_ms', sa.Integer(), nullable=False, comment='End-to-end execution time'),
    sa.Column('token_count', sa.Integer(), nullable=False, comment='LLM tokens consumed'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('test_results', sa.JSON(), nullable=True, comment='Dict[str, bool] - test pass/fail'),
    sa.Column('error_messages', sa.JSON(), nullable=True, comment='List[str] - runtime errors'),
    sa.Column('performance_metrics', sa.JSON(), nullable=True, comment='Dict[str, float] - metrics'),
    sa.Column('environment_feedback', sa.JSON(), nullable=True, comment='Dict - external system responses'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_outputs_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_outputs'))
    )
    op.create_index(op.f('ix_task_outputs_task_id'), 'task_outputs', ['task_id'], unique=False)
    op.create_table('insight_candidates',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('reflection_id', sa.String(length=36), nullable=False),
    sa.Column('content', sa.Text(), nullable=False, comment='Strategy or observation text'),
    sa.Column('section', sa.String(length=32), nullable=False, comment='Helpful/Harmful/Neutral classification'),
    sa.Column('confidence', sa.Float(), nullable=False, comment='Insight validity confidence (0.0-1.0)'),
    sa.Column('rationale', sa.Text(), nullable=False, comment='Explanation linking insight to feedback'),
    sa.Column('tags', sa.JSON(), nullable=False, comment='List[str] - domain/category tags'),
    sa.Column('referenced_steps', sa.JSON(), nullable=False, comment='List[int] - reasoning trace step indices'),
    sa.Column('embedding', sa.JSON(), nullable=True, comment='List[float] - 384-dim vector (computed by Curator)'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['reflection_id'], ['reflections.id'], name=op.f('fk_insight_candidates_reflection_id_reflections')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_insight_candidates'))
    )
    op.create_index(op.f('ix_insight_candidates_reflection_id'), 'insight_candidates', ['reflection_id'], unique=False)
    op.create_index(op.f('ix_insight_candidates_section'), 'insight_candidates', ['section'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_insight_candidates_section'), table_name='insight_candidates')
    op.drop_index(op.f('ix_insight_candidates_reflection_id'), table_name='insight_candidates')
    op.drop_table('insight_candidates')
    op.drop_index(op.f('ix_task_outputs_task_id'), table_name='task_outputs')
    op.drop_table('task_outputs')
    op.drop_index(op.f('ix_reflections_task_id'), table_name='reflections')
    op.drop_table('reflections')
    op.drop_index(op.f('ix_tasks_domain_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_domain'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_playbook_bullets_stage'), table_name='playbook_bullets')
    op.drop_index(op.f('ix_playbook_bullets_section'), table_name='playbook_bullets')
    op.drop_index(op.f('ix_playbook_bullets_domain_id'), table_name='playbook_bullets')
    op.drop_index('idx_domain_stage', table_name='playbook_bullets')
    op.drop_index('idx_domain_section', table_name='playbook_bullets')
    op.drop_table('playbook_bullets')
    op.drop_index(op.f('ix_diff_journal_entries_timestamp'), table_name='diff_journal_entries')
    op.drop_index(op.f('ix_diff_journal_entries_task_id'), table_name='diff_journal_entries')
    op.drop_index(op.f('ix_diff_journal_entries_stage'), table_name='diff_journal_entries')
    op.drop_index(op.f('ix_diff_journal_entries_operation'), table_name='diff_journal_entries')
    op.drop_index(op.f('ix_diff_journal_entries_domain_id'), table_name='diff_journal_entries')
    op.drop_index(op.f('ix_diff_journal_entries_bullet_id'), table_name='diff_journal_entries')
    op.drop_table('diff_journal_entries')
    # ### end Alembic commands ###
